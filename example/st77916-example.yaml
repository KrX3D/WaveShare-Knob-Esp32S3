substitutions:
# Device setting  
  board: esp32-s3-devkitc-1
  name: "esp-smart-knob"
  comment: ESP Smart Knob
  type: esp-idf  
  
esphome:
  friendly_name: SmartKnob
  name: "${name}"
  comment: "${comment}"
  platformio_options:
    board_build.flash_mode: dio
    board_build.f_flash: 80000000L
    board_build.f_cpu: 240000000L
    
esp32:
  board: ${board}
  flash_size: 8MB
  cpu_frequency: 240MHz
  framework:
    type: esp-idf
    #version: 4.4.8
    #platform_version: 5.4.0
    sdkconfig_options:
      COMPILER_OPTIMIZATION_SIZE: "y"
      CONFIG_ESP32S3_DEFAULT_CPU_FREQ_240: "y"
      CONFIG_ESP32S3_DATA_CACHE_64KB: "y"
      CONFIG_ESP32S3_DATA_CACHE_LINE_64B: "y"
      CONFIG_SPIRAM_FETCH_INSTRUCTIONS: "y"
      CONFIG_SPIRAM_RODATA: "y"

      CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ_240=: "y"
      CONFIG_FREERTOS_HZ=: "1000"
      CONFIG_ESPTOOLPY_FLASHMODE_QIO=: "y"
      CONFIG_ESPTOOLPY_FLASHFREQ_120M=: "y"
      CONFIG_SPIRAM_MODE_OCT=: "y"
      CONFIG_SPIRAM_SPEED_120M=: "y"
      CONFIG_COMPILER_OPTIMIZATION_PERF=: "y"
    advanced:
      enable_idf_experimental_features: true

psram:
  mode: octal
  speed: 120MHz

wifi:
  ssid: "Your_WiFi_SSID"
  password: "Your_WiFi_Password"

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:

# External component for ST77916 display
external_components:
  - source:
      type: git
      url: https://github.com/KrX3D/WaveShare-Knob-Esp32S3
      ref: main  # or a specific commit SHA
    refresh: always

# SPI configuration for the display
spi:
  id: display_qspi
  type: quad
  clk_pin: 13
  data_pins: [15, 16, 17, 18]   # TFT_SDA0..3

# I2C for touch controller
i2c:
  sda: 11  # TOUCH_PIN_NUM_I2C_SDA
  scl: 12  # TOUCH_PIN_NUM_I2C_SCL
  frequency: 400kHz
  scan: true
  id: ic_bus

# Font definition
font:
  - file: "gfonts://Roboto"
    id: roboto
    size: 20
  - file: "gfonts://Roboto"
    id: roboto_small
    size: 16

# Global variable to store counter for display
globals:
  - id: display_counter
    type: int
    restore_value: false
    initial_value: '0'

sensor:
  - platform: rotary_encoder_custom
    name: "Rotary Encoder"
    id: rotary_counter
    pin_a: 8
    pin_b: 7
    publish_initial_value: true
    on_value:
      then:
        - globals.set:
            id: display_counter
            value: !lambda 'return (int)x;'

output:
  - platform: ledc
    pin: GPIO47      # your backlight GPIO
    id: backlight_pwm
    frequency: 5000Hz

light:
  - platform: monochromatic
    output: backlight_pwm
    name: "Display Backlight"
    id: back_light
    restore_mode: ALWAYS_ON #ALWAYS_OFF
    default_transition_length: 0s

display:
  - platform: qspi_dbi
    id: main_display
    model: CUSTOM
    spi_id: display_qspi
    data_rate: 40MHz #50MHz
    cs_pin:    GPIO14    # TFT_CS
    reset_pin: GPIO21    # TFT_RST
    color_order: rgb
    invert_colors: true
    dimensions:
      width:  360
      height: 360
      offset_width: 0   # Added explicit offset
      offset_height: 0  # Added explicit offset
    auto_clear_enabled: false
    update_interval: 17ms  # ESPHome requires whole milliseconds (~60fps)
    show_test_card: true

    init_sequence:
      - [0xF0, 0x28]
      - [0xF2, 0x28] 
      - [0x73, 0xF0]
      - [0x7C, 0xD1]
      - [0x83, 0xE0]
      - [0x84, 0x61]
      - [0xF2, 0x82]
      - [0xF0, 0x00]
      - [0xF0, 0x01]
      - [0xF1, 0x01]
      - [0xB0, 0x56]
      - [0xB1, 0x4D]
      - [0xB2, 0x24]
      - [0xB4, 0x87]
      - [0xB5, 0x44]
      - [0xB6, 0x8B]
      - [0xB7, 0x40]
      - [0xB8, 0x86]
      - [0xBA, 0x00]
      - [0xBB, 0x08]
      - [0xBC, 0x08]
      - [0xBD, 0x00]
      - [0xC0, 0x80]
      - [0xC1, 0x10]
      - [0xC2, 0x37]
      - [0xC3, 0x80]
      - [0xC4, 0x10]
      - [0xC5, 0x37]
      - [0xC6, 0xA9]
      - [0xC7, 0x41]
      - [0xC8, 0x01]
      - [0xC9, 0xA9]
      - [0xCA, 0x41]
      - [0xCB, 0x01]
      - [0xD0, 0x91]
      - [0xD1, 0x68]
      - [0xD2, 0x68]
      - [0xF5, 0x00, 0xA5]
      - [0xDD, 0x4F]
      - [0xDE, 0x4F]
      - [0xF1, 0x10]
      - [0xF0, 0x00]
      - [0xF0, 0x02]
      - [0xE0, 0xF0, 0x0A, 0x10, 0x09, 0x09, 0x36, 0x35, 0x33, 0x4A, 0x29, 0x15, 0x15, 0x2E, 0x34]
      - [0xE1, 0xF0, 0x0A, 0x0F, 0x08, 0x08, 0x05, 0x34, 0x33, 0x4A, 0x39, 0x15, 0x15, 0x2D, 0x33]
      - [0xF0, 0x10]
      - [0xF3, 0x10]
      - [0xE0, 0x07]
      - [0xE1, 0x00]
      - [0xE2, 0x00]
      - [0xE3, 0x00]
      - [0xE4, 0xE0]
      - [0xE5, 0x06]
      - [0xE6, 0x21]
      - [0xE7, 0x01]
      - [0xE8, 0x05]
      - [0xE9, 0x02]
      - [0xEA, 0xDA]
      - [0xEB, 0x00]
      - [0xEC, 0x00]
      - [0xED, 0x0F]
      - [0xEE, 0x00]
      - [0xEF, 0x00]
      - [0xF8, 0x00]
      - [0xF9, 0x00]
      - [0xFA, 0x00]
      - [0xFB, 0x00]
      - [0xFC, 0x00]
      - [0xFD, 0x00]
      - [0xFE, 0x00]
      - [0xFF, 0x00]
      - [0x60, 0x40]
      - [0x61, 0x04]
      - [0x62, 0x00]
      - [0x63, 0x42]
      - [0x64, 0xD9]
      - [ 0x65, 0x00 ]
      - [ 0x66, 0x00 ]
      - [ 0x67, 0x00 ]
      - [ 0x68, 0x00 ]
      - [ 0x69, 0x00 ]
      - [ 0x6A, 0x00 ]
      - [ 0x6B, 0x00 ]
      - [ 0x70, 0x40 ]
      - [ 0x71, 0x03 ]
      - [ 0x72, 0x00 ]
      - [ 0x73, 0x42 ]
      - [ 0x74, 0xD8 ]
      - [ 0x75, 0x00 ]
      - [ 0x76, 0x00 ]
      - [ 0x77, 0x00 ]
      - [ 0x78, 0x00 ]
      - [ 0x79, 0x00 ]
      - [ 0x7A, 0x00 ]
      - [ 0x7B, 0x00 ]
      - [ 0x80, 0x48 ]
      - [ 0x81, 0x00 ]
      - [ 0x82, 0x06 ]
      - [ 0x83, 0x02 ]
      - [ 0x84, 0xD6 ]
      - [ 0x85, 0x04 ]
      - [ 0x86, 0x00 ]
      - [ 0x87, 0x00 ]
      - [ 0x88, 0x48 ]
      - [ 0x89, 0x00 ]
      - [ 0x8A, 0x08 ]
      - [ 0x8B, 0x02 ]
      - [ 0x8C, 0xD8 ]
      - [ 0x8D, 0x04 ]
      - [ 0x8E, 0x00 ]
      - [ 0x8F, 0x00 ]
      - [ 0x90, 0x48 ]
      - [ 0x91, 0x00 ]
      - [ 0x92, 0x0A ]
      - [ 0x93, 0x02 ]
      - [ 0x94, 0xDA ]
      - [ 0x95, 0x04 ]
      - [ 0x96, 0x00 ]
      - [ 0x97, 0x00 ]
      - [ 0x98, 0x48 ]
      - [ 0x99, 0x00 ]
      - [ 0x9A, 0x0C ]
      - [ 0x9B, 0x02 ]
      - [ 0x9C, 0xDC ]
      - [ 0x9D, 0x04 ]
      - [ 0x9E, 0x00 ]
      - [ 0x9F, 0x00 ]
      - [ 0xA0, 0x48 ]
      - [ 0xA1, 0x00 ]
      - [ 0xA2, 0x05 ]
      - [ 0xA3, 0x02 ]
      - [ 0xA4, 0xD5 ]
      - [ 0xA5, 0x04 ]
      - [ 0xA6, 0x00 ]
      - [ 0xA7, 0x00 ]
      - [ 0xA8, 0x48 ]
      - [ 0xA9, 0x00 ]
      - [ 0xAA, 0x07 ]
      - [ 0xAB, 0x02 ]
      - [ 0xAC, 0xD7 ]
      - [ 0xAD, 0x04 ]
      - [ 0xAE, 0x00 ]
      - [ 0xAF, 0x00 ]
      - [ 0xB0, 0x48 ]
      - [ 0xB1, 0x00 ]
      - [ 0xB2, 0x09 ]
      - [ 0xB3, 0x02 ]
      - [ 0xB4, 0xD9 ]
      - [ 0xB5, 0x04 ]
      - [ 0xB6, 0x00 ]
      - [ 0xB7, 0x00 ]
      - [ 0xB8, 0x48 ]
      - [ 0xB9, 0x00 ]
      - [ 0xBA, 0x0B ]
      - [ 0xBB, 0x02 ]
      - [ 0xBC, 0xDB ]
      - [ 0xBD, 0x04 ]
      - [ 0xBE, 0x00 ]
      - [ 0xBF, 0x00 ]
      - [ 0xC0, 0x10 ]
      - [ 0xC1, 0x47 ]
      - [ 0xC2, 0x56 ]
      - [ 0xC3, 0x65 ]
      - [ 0xC4, 0x74 ]
      - [ 0xC5, 0x88 ]
      - [ 0xC6, 0x99 ]
      - [ 0xC7, 0x01 ]
      - [ 0xC8, 0xBB ]
      - [ 0xC9, 0xAA ]
      - [ 0xD0, 0x10 ]
      - [ 0xD1, 0x47 ]
      - [ 0xD2, 0x56 ]
      - [ 0xD3, 0x65 ]
      - [ 0xD4, 0x74 ]
      - [ 0xD5, 0x88 ]
      - [ 0xD6, 0x99 ]
      - [ 0xD7, 0x01 ]
      - [ 0xD8, 0xBB ]
      - [ 0xD9, 0xAA ]
      - [0xF3, 0x01]
      - [0xF0, 0x00]
      - [0x3A, 0x55]  # 16-bit color format (RGB565)
      - delay 10ms
      - [0x21, 0x00]  # Display inversion
      - [0x11, 0x00]  # Sleep out
      - delay 120ms
      - [0x29, 0x00]  # Display on
      - delay 50ms

# Touchscreen (CST816S)
touchscreen:
  - platform: cst816  # This may need to be implemented as custom component
    id: my_touchscreen
    display: main_display
    reset_pin: 10  # TOUCH_PIN_NUM_RST
    interrupt_pin: 9   # TOUCH_PIN_NUM_INT
    update_interval: 30ms
    transform:
      mirror_x: false
      mirror_y: false
      swap_xy: false
    on_update:
      - lambda: |-
            for (auto touch: touches)  {
                if (touch.state <= 2) {
                  ESP_LOGI("Touch points:", "id=%d x=%d, y=%d", touch.id, touch.x, touch.y);
                }
            }
